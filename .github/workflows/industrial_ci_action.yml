name: CI

on: [push, pull_request]

jobs:
  industrial_ci:
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    env:
      CCACHE_DIR: /github/home/.ccache
      AFTER_RUN_TARGET_TEST: "cd /root/target_ws && catkin build -v tmr_listener --catkin-make-args CTEST_OUTPUT_ON_FAILURE=1 test"
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-16.04]
        include:
          - os: ubuntu-16.04
            env: { ROS_DISTRO: kinetic, CMAKE_ARGS: -DTMR_ENABLE_TESTING=ON }
          - os: ubuntu-18.04
            env: { ROS_DISTRO: melodic, ROS_REPO: main, CMAKE_ARGS: -DTMR_ENABLE_TESTING=ON -DENABLE_COVERAGE=ON,
                   AFTER_INSTALL_TARGET_DEPENDENCIES: 'pip install gcovr', DOCKER_RUN_OPTS: '-v "$PWD/shared:/shared"',
                   AFTER_SCRIPT: 'cd /root/target_ws/build/tmr_listener && gcovr . -r /root/target_ws/src/tmr_listener/ --branches --xml-pretty -o coverage.xml --exclude-unreachable-branches --exclude-throw-branches --gcov-exclude=".*test.*" --gcov-exclude=".*node.*" --exclude="/root/target_ws/src/tmr_listener/src/tmr_cmd_line_option.hpp" && mv /root/target_ws/build/tmr_listener/coverage.xml /shared/coverage.xml' }
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ matrix.env.ROS_DISTRO }}-${{ matrix.env.ROS_REPO }}
      - uses: "ros-industrial/industrial_ci@master"
        env: ${{ matrix.env }}
      - uses: codecov/codecov-action@v1
        if: ${{ matrix.os == 'ubuntu-18.04' }}
        with:
          files: $PWD/shared/coverage.xml
