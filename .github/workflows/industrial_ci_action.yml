name: CI

on: [push, pull_request]

jobs:
  industrial_ci:
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    env:
      CCACHE_DIR: /github/home/.ccache
      CODACY_PROJ_TOK: ${{ secrets.CODACY_PROJECT_TOKEN }}
      AFTER_RUN_TARGET_TEST: "cd /root/target_ws && catkin build -v tmr_listener -j1 --catkin-make-args CTEST_OUTPUT_ON_FAILURE=1 test"
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-16.04]
        include:
          - os: ubuntu-16.04
            env: { ROS_DISTRO: kinetic, CMAKE_ARGS: -DTMR_ENABLE_TESTING=ON, ADDITIONAL_DEBS: 'ros-kinetic-rosbash', }
          - os: ubuntu-18.04
            env: { ROS_DISTRO: melodic, 
                   ROS_REPO: main, 
                   CMAKE_ARGS: -DTMR_ENABLE_TESTING=ON -DENABLE_COVERAGE=ON,
                   BEFORE_INIT: 'apt -y update && apt -y upgrade && apt -y install curl git', 
                   AFTER_INSTALL_TARGET_DEPENDENCIES: 'pip install gcovr', 
                   ADDITIONAL_DEBS: 'ros-melodic-rosbash',
                   DOCKER_RUN_OPTS: '$(bash <(curl -s https://codecov.io/env)) -e CODACY_PROJECT_TOKEN=$CODACY_PROJ_TOK',
                   AFTER_SCRIPT: 'bash <(curl -s https://codecov.io/bash) -f /root/target_ws/build/tmr_listener/coverage.xml && bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r /root/target_ws/build/tmr_listener/coverage.xml' }
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ matrix.env.ROS_DISTRO }}-${{ matrix.env.ROS_REPO }}
      - uses: "ros-industrial/industrial_ci@master"
        env: ${{ matrix.env }}